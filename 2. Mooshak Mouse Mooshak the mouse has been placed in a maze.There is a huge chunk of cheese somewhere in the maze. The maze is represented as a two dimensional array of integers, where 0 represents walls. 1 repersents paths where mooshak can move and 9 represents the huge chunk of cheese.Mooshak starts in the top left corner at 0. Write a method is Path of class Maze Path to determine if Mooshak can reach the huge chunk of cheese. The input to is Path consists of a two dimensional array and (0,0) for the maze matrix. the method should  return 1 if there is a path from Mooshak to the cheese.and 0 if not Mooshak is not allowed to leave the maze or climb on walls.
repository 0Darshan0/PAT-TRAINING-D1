2. Mooshak Mouse Mooshak the mouse has been placed in a maze.There is a huge chunk of cheese somewhere in the maze. The maze is represented as a two dimensional array of integers, where 0 represents walls. 1 repersents paths where mooshak can move and 9 represents the huge chunk of cheese.Mooshak starts in the top left corner at 0. Write a method is Path of class Maze Path to determine if Mooshak can reach the huge chunk of cheese. The input to is Path consists of a two dimensional array and (0,0) for the maze matrix. the method should  return 1 if there is a path from Mooshak to the cheese.and 0 if
not Mooshak is not allowed to leave the maze or climb on walls.

Input Format:  
The input to is Path consists of a two dimensional array size and the values for the maze matrix
Output Format : 
return 1 if there is a path and 0 if not Input: 8
1 0 1 1 1 0 0 1
1 0 0 0 1 1 1 1 
1 0 0 0 0 0 0 0 
1 0 1 0 9 0 1 1 
1 1 1 0 1 0 0 1 
1 0 1 0 1 1 0 1 
1 0 0 0 0 1 0 1 
1 1 1 1 1 1 1 1
Output:  1
CODE:


 import java.util.*; 
public class Main 
{   
    static int flag=0;
    public static void Solve(int n,int arr[][],int i,int j)
    {   
        if(i>=0 && i<n && j>=0 && j<n && arr[i][j]==9)
        {
           flag=1; 
        }
        if(i==-1||j==-1||i==n||j==n||arr[i][j]==0||arr[i][j]==2)
        {  
            return;
        }
        else 
        {
            arr[i][j]=2; //visited 
            Solve(n,arr,i-1,j);
            Solve(n,arr,i,j-1);
            Solve(n,arr,i+1,j);
            Solve(n,arr,i,j+1);
            arr[i][j]=1;
        }
        
    }
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[][] arr=new int[n][n];
        int i,j;
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
        Solve(n,arr,0,0);
        if(flag==1)
         System.out.print("1");
        else 
         System.out.print("0");
    }
}
